local Maid = loadstring(game:HttpGet("https://raw.githubusercontent.com/AccountBurner/Utility/refs/heads/main/Maid.lua"))();

local OverlaySystem = {};
local OverlayMaid = Maid.new();
local OverlayGui = nil;
local OverlayLabels = {};
local LastUpdate = 0;
local UpdateQueue = {};

local function CreateOverlay()
    if OverlayGui then OverlayGui:Destroy() end
    
    local url = 'https://raw.githubusercontent.com/AccountBurner/Utility/main/55279d991b8a4dcb35bcd36d26fb0cb9.png'
    local path = 'zekehub_cover.png'
    
    if not isfile(path) then
        writefile(path, game:HttpGet(url))
    end
    local asset = getcustomasset(path)
    
    OverlayGui = Instance.new('ScreenGui')
    OverlayGui.IgnoreGuiInset = true
    OverlayGui.ResetOnSpawn = false
    OverlayGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    OverlayGui.DisplayOrder = 10
    OverlayGui.Parent = gethui and gethui() or game:GetService("CoreGui")
    
    local ImageLabel = Instance.new('ImageLabel', OverlayGui)
    ImageLabel.Size = UDim2.new(1, 0, 1, 0)
    ImageLabel.Position = UDim2.new(0, 0, 0, 0)
    ImageLabel.BackgroundTransparency = 1
    ImageLabel.Image = asset
    ImageLabel.ScaleType = Enum.ScaleType.Stretch
    
    local DarkOverlay = Instance.new('Frame', OverlayGui)
    DarkOverlay.Size = UDim2.new(1, 0, 1, 0)
    DarkOverlay.BackgroundColor3 = Color3.new(0, 0, 0)
    DarkOverlay.BackgroundTransparency = 0.4
    DarkOverlay.BorderSizePixel = 0
    
    local Container = Instance.new('Frame', OverlayGui)
    Container.Size = UDim2.new(0, 500, 0, 360)
    Container.Position = UDim2.new(0.5, -250, 0.5, -180)
    Container.BackgroundColor3 = Color3.new(0.05, 0.05, 0.05)
    Container.BackgroundTransparency = 0.05
    Container.BorderSizePixel = 0
    
    local UICorner = Instance.new('UICorner', Container)
    UICorner.CornerRadius = UDim.new(0, 20)
    
    local UIStroke = Instance.new('UIStroke', Container)
    UIStroke.Color = Color3.fromRGB(138, 43, 226)
    UIStroke.Thickness = 3
    UIStroke.Transparency = 0.3
    
    local Gradient = Instance.new('UIGradient', UIStroke)
    Gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(138, 43, 226)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(75, 0, 130)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(138, 43, 226))
    }
    
    local DiscordLabel = Instance.new('TextLabel', Container)
    DiscordLabel.Size = UDim2.new(1, 0, 0, 60)
    DiscordLabel.Position = UDim2.new(0, 0, 0, 10)
    DiscordLabel.BackgroundTransparency = 1
    DiscordLabel.Text = 'discord.gg/zekehub'
    DiscordLabel.TextColor3 = Color3.new(1, 1, 1)
    DiscordLabel.TextScaled = false
    DiscordLabel.TextSize = 36
    DiscordLabel.Font = Enum.Font.SourceSansBold
    
    local DiscordStroke = Instance.new('UIStroke', DiscordLabel)
    DiscordStroke.Color = Color3.new(0, 0, 0)
    DiscordStroke.Thickness = 2
    
    local StatsContainer = Instance.new('Frame', Container)
    StatsContainer.Size = UDim2.new(1, -40, 0, 200)
    StatsContainer.Position = UDim2.new(0, 20, 0, 80)
    StatsContainer.BackgroundTransparency = 1
    
    OverlayLabels = {}
    local statConfigs = {
        {name = 'Task', text = 'Current Task: None', icon = 'üìã'},
        {name = 'Bucks', text = 'Bucks: 0', icon = 'üí∞'},
        {name = 'Potions', text = 'Age Potions: 0', icon = 'üß™'},
        {name = 'Runtime', text = 'Runtime: 00:00', icon = '‚è±Ô∏è'},
        {name = 'Location', text = 'Location: Unknown', icon = 'üìç'}
    }
    
    for i, config in ipairs(statConfigs) do
        local statFrame = Instance.new('Frame', StatsContainer)
        statFrame.Size = UDim2.new(1, 0, 0, 35)
        statFrame.Position = UDim2.new(0, 0, 0, (i-1) * 40)
        statFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
        statFrame.BackgroundTransparency = 0.7
        
        local statCorner = Instance.new('UICorner', statFrame)
        statCorner.CornerRadius = UDim.new(0, 10)
        
        local label = Instance.new('TextLabel', statFrame)
        label.Size = UDim2.new(1, -10, 1, 0)
        label.Position = UDim2.new(0, 10, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = config.icon .. '  ' .. config.text
        label.TextColor3 = Color3.new(0.95, 0.95, 0.95)
        label.TextScaled = false
        label.TextSize = 20
        label.Font = Enum.Font.SourceSans
        label.TextXAlignment = Enum.TextXAlignment.Left
        
        OverlayLabels[config.name] = label
    end
    
    local ToggleButton = Instance.new('TextButton', Container)
    ToggleButton.Size = UDim2.new(0, 200, 0, 45)
    ToggleButton.Position = UDim2.new(0.5, -100, 1, -60)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
    ToggleButton.Text = 'HIDE OVERLAY'
    ToggleButton.TextColor3 = Color3.new(1, 1, 1)
    ToggleButton.TextScaled = false
    ToggleButton.TextSize = 18
    ToggleButton.Font = Enum.Font.SourceSansBold
    
    local ButtonCorner = Instance.new('UICorner', ToggleButton)
    ButtonCorner.CornerRadius = UDim.new(0, 12)
    
    local ButtonStroke = Instance.new('UIStroke', ToggleButton)
    ButtonStroke.Color = Color3.new(0, 0, 0)
    ButtonStroke.Thickness = 2
    ButtonStroke.Transparency = 0.5
    
    local ShowButton = Instance.new('TextButton', OverlayGui)
    ShowButton.Size = UDim2.new(0, 200, 0, 45)
    ShowButton.Position = UDim2.new(0.5, -100, 1, -120)
    ShowButton.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
    ShowButton.BackgroundTransparency = 0.6
    ShowButton.Text = 'SHOW OVERLAY'
    ShowButton.TextColor3 = Color3.new(1, 1, 1)
    ShowButton.TextScaled = false
    ShowButton.TextSize = 18
    ShowButton.Font = Enum.Font.SourceSansBold
    ShowButton.Visible = false
    
    local ShowButtonCorner = Instance.new('UICorner', ShowButton)
    ShowButtonCorner.CornerRadius = UDim.new(0, 12)
    
    local ShowButtonStroke = Instance.new('UIStroke', ShowButton)
    ShowButtonStroke.Color = Color3.new(0, 0, 0)
    ShowButtonStroke.Thickness = 2
    ShowButtonStroke.Transparency = 0.7
    
   OverlayMaid:AddTask(ToggleButton.MouseButton1Click:Connect(function()
        Container.Visible = false
        DarkOverlay.Visible = false
        ImageLabel.Visible = false
        ShowButton.Visible = true
        game:GetService("RunService"):Set3dRenderingEnabled(true);
    end), "3DRendering")
    
     OverlayMaid:AddTask(ShowButton.MouseButton1Click:Connect(function()
        Container.Visible = true
        DarkOverlay.Visible = true
        ImageLabel.Visible = true
        ShowButton.Visible = false
        game:GetService("RunService"):Set3dRenderingEnabled(false);
    end), "3DRendering")
    
    OverlayMaid:AddTask(ToggleButton.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(ToggleButton, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(75, 0, 130)
        }):Play()
    end), "3DRendering")
    
    OverlayMaid:AddTask(ToggleButton.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(ToggleButton, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(138, 43, 226)
        }):Play()
    end), "3DRendering")
    return OverlayGui
end

function OverlaySystem.Toggle3DRendering(enabled)
    OverlayMaid:Cleanup("3DRendering");
    if enabled then
        CreateOverlay()
        
        task.wait(0.1)
        game:GetService("RunService"):Set3dRenderingEnabled(false);
        
        if OverlayGui then
            OverlayMaid:AddTask(function()
                if OverlayGui then
                    OverlayGui:Destroy()
                    OverlayGui = nil
                end
                game:GetService("RunService"):Set3dRenderingEnabled(true);
            end, "3DRendering");
        end
    else
        if OverlayGui then
            OverlayGui:Destroy()
            OverlayGui = nil
        end
        game:GetService("RunService"):Set3dRenderingEnabled(true);
    end
end

function OverlaySystem.UpdateStats(data)
    if not OverlayGui then return end
    
    if data.task and OverlayLabels.Task then
        OverlayLabels.Task.Text = 'üìã  Current Task: ' .. data.task
    end
    if data.bucks and OverlayLabels.Bucks then
        OverlayLabels.Bucks.Text = 'üí∞  Bucks: ' .. tostring(data.bucks)
    end
    if data.potions and OverlayLabels.Potions then
        OverlayLabels.Potions.Text = 'üß™  Age Potions: ' .. tostring(data.potions)
    end
    if data.runtime and OverlayLabels.Runtime then
        OverlayLabels.Runtime.Text = '‚è±Ô∏è  Runtime: ' .. data.runtime
    end
    if data.location and OverlayLabels.Location then
        OverlayLabels.Location.Text = 'üìç  Location: ' .. data.location
    end
end

function OverlaySystem.Destroy()
    OverlayMaid:Cleanup();
    if OverlayGui then
        OverlayGui:Destroy()
        OverlayGui = nil
    end
    UpdateQueue = {}
end

return OverlaySystem;
